name: 'Setup CUDA Environment'
description: 'Sets up CUDA toolkit and libraries for inference builds'
inputs:
  cuda-version:
    description: 'CUDA version to install'
    required: false
    default: '13.0.0'
runs:
  using: 'composite'
  steps:
    - name: Setup CUDA Toolkit
      uses: Jimver/cuda-toolkit@v0.2.27
      with:
        cuda: ${{ inputs.cuda-version }}
        method: 'network'
        sub-packages: '["nvcc", "cudart", "cudart-dev", "thrust", "nvrtc"]'

    - name: Install CUDA Math Libraries
      shell: bash
      run: |
        echo "Installing CUDA math libraries..."
        # Update package list
        sudo apt-get update

        # Install cuBLAS and cuRAND from the full CUDA toolkit
        # Use the full cuda-toolkit-13-0 to get all libraries
        sudo apt-get install -y cuda-toolkit-13-0 || echo "Full toolkit install failed, trying individual components"

        # If full toolkit fails, try individual packages
        sudo apt-get install -y cuda-nvcc-13-0 cuda-cudart-13-0 cuda-cudart-dev-13-0 || true

        # Check what libraries are actually installed
        echo "=== Checking CUDA libraries ==="
        find /usr/local/cuda-13.0/lib64/ -name "*cublas*" -o -name "*curand*" -o -name "*nvrtc*" || echo "No CUDA 13.0 libraries found"

        # Try to find libraries in system locations
        find /usr/lib/x86_64-linux-gnu/ -name "*cublas*" -o -name "*curand*" 2>/dev/null || echo "No system CUDA libraries found"

    - name: Verify CUDA Installation
      shell: bash
      run: |
        echo "CUDA Installation Verification:"
        nvcc --version
        echo "CUDA_HOME: $CUDA_HOME"
        echo "CUDA_PATH: $CUDA_PATH"
        if [ -d "$CUDA_PATH/lib64/" ]; then
          ls -la $CUDA_PATH/lib64/ | head -10
        else
          echo "CUDA lib64 directory not found"
        fi