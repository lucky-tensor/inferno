[workspace]
members = [
    "crates/shared",
    "crates/proxy",
    "crates/backend",
    "crates/governator",
    "crates/cli",
    "crates/inference",
    "benchmarking",
    "testsuite",
    "crates/inference/pgo-benchmarks",
]
resolver = "2"
default-members = ["crates/cli"]

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Inferno Team"]
license = "Apache-2.0"
repository = "https://github.com/lucky-tensor/inferno"

[workspace.dependencies]
# Shared dependencies across crates
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
thiserror = "1.0"
async-trait = "0.1"
clap = { version = "4.0", features = ["derive", "env"] }
bytes = "1.0"
chrono = { version = "0.4", features = ["serde"] }

# Pingora dependencies for proxy
pingora-core = "0.6"
pingora-proxy = "0.6"
pingora-http = "0.6"

# Development dependencies
criterion = { version = "0.5", features = ["html_reports"] }
tokio-test = "0.4"
proptest = "1.4"
wiremock = "0.5"
serial_test = "3.0"
reqwest = { version = "0.11", features = ["json", "blocking", "multipart"] }
hyper = { version = "0.14", features = ["full"] }
http = "0.2"

# Coverage dependencies
cargo-llvm-cov = "0.6"

# Backend-specific dependencies
sqlx = { version = "0.6", features = ["postgres", "chrono", "runtime-tokio-native-tls"] }

# Additional shared dependencies
config = "0.14"
toml = "0.8"
num_cpus = "1.16"
parking_lot = "0.12"
once_cell = "1.19"
validator = { version = "0.18", features = ["derive"] }
tempfile = "3.8"
rstest = "0.18"

# Workspace shared dependencies
inferno-shared = { path = "crates/shared" }

# Burn ML Framework dependencies (latest stable versions)
burn = "0.18"
burn-core = "0.18"
burn-ndarray = "0.18"
burn-cuda = "0.18"
burn-tensor = "0.18"
burn-import = "0.18"
tokenizers = "0.15"
hf-hub = "0.3"
safetensors = "0.4"
half = "2.3"
llama-burn = { git = "https://github.com/tracel-ai/models", package = "llama-burn", features = ["tiny", "pretrained"] }
serde_yaml = "0.9"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.release]
codegen-units = 1
panic = "abort"
strip = true
debug = false
opt-level = 3
lto = "fat"

[profile.bench]
codegen-units = 1
strip = true
debug = false
opt-level = 3
lto = "fat"

# PGO profile for instrumented builds (profile generation)
[profile.pgo-gen]
inherits = "release"
# Note: LTO conflicts with PGO instrumentation, so we disable it for the instrumented build
lto = false
# Keep other optimizations to match release as closely as possible
codegen-units = 1
panic = "abort"
strip = true
debug = false
opt-level = 3

# PGO profile for optimized builds (profile use)
[profile.pgo-use]
inherits = "release"
# Can use full optimizations since we're consuming profile data, not generating it
codegen-units = 1
panic = "abort"
strip = true
debug = false
opt-level = 3
lto = "fat"
